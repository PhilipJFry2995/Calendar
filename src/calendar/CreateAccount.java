/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calendar;

import java.awt.Color;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ToolTipManager;

/**
 *
 * @author Dennis
 */
public class CreateAccount extends javax.swing.JDialog {
    
    private Login parent;
    private File accs = new File("accounts/accounts.txt");
    private File folder;
    private Point position;

    public CreateAccount(Login parent) {
        super(parent);
        initComponents();
        this.setLocationRelativeTo(null);
        this.parent = parent;
        CreateAccount cr = this;
        ToolTipManager.sharedInstance().registerComponent(jButton4);
        ToolTipManager.sharedInstance().setInitialDelay(0);
        
        addMouseListener(new MouseAdapter() {                                   // Позиция мыши
            public void mousePressed(MouseEvent e) {                            
                position = e.getPoint();
                getComponentAt(position);
            }
        });
        
        addMouseMotionListener(new MouseMotionAdapter() {                       // Перетаскивание по экрану
            @Override
            public void mouseDragged(MouseEvent e) {
 
                int thisX = cr.getLocation().x;
                int thisY = cr.getLocation().y;
 
                int xMoved = (thisX + e.getX()) - (thisX + position.x);
                int yMoved = (thisY + e.getY()) - (thisY + position.y);
 
                int X = thisX + xMoved;
                int Y = thisY + yMoved;
                cr.setLocation(X, Y);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create New User");
        setBackground(new java.awt.Color(239, 154, 0));
        setIconImage(null);
        setIconImages(null);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(400, 302));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 300));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Private Calendar");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setMinimumSize(new java.awt.Dimension(200, 30));
        jLabel3.setOpaque(true);
        jLabel3.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 22, -1, -1));

        jButton3.setBackground(new java.awt.Color(255, 0, 0));
        jButton3.setText("<");
        jButton3.setMaximumSize(new java.awt.Dimension(40, 20));
        jButton3.setMinimumSize(new java.awt.Dimension(40, 20));
        jButton3.setPreferredSize(new java.awt.Dimension(40, 20));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 2, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Создание нового пользователя");
        jLabel5.setPreferredSize(new java.awt.Dimension(260, 15));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 54, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Имя");
        jLabel4.setPreferredSize(new java.awt.Dimension(43, 30));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 75, -1, -1));

        jTextField1.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 75, -1, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Логин");
        jLabel1.setPreferredSize(new java.awt.Dimension(64, 30));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 115, -1, -1));

        jTextField3.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 155, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Пароль");
        jLabel2.setPreferredSize(new java.awt.Dimension(75, 30));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 155, -1, -1));

        jTextField2.setPreferredSize(new java.awt.Dimension(200, 28));
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 115, -1, -1));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton1.setText("Создать");
        jButton1.setPreferredSize(new java.awt.Dimension(120, 40));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, -1, -1));

        jButton2.setText("Назад");
        jButton2.setPreferredSize(new java.awt.Dimension(70, 25));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 250, -1, -1));

        jButton4.setBackground(new java.awt.Color(204, 204, 204));
        jButton4.setText("?");
        jButton4.setToolTipText("Введите имя, логин и пароль нового пользователя");
        jButton4.setPreferredSize(new java.awt.Dimension(40, 20));
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        this.dispose();
        parent.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.setVisible(false);
        this.dispose();
        parent.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean nameOK = false;
        boolean loginOK = false;
        boolean passwordOK = false;
        boolean exists = true;
        /**********************************************/
        /* EMPTY FIELDS AND INVALID CHARACHTERS CHECK */
        /**********************************************/
        if(jTextField1.getText() == null){      
            jLabel5.setForeground(Color.red);
            jLabel5.setText("Введите имя!");
        }else{
            if(!checkInvalidSymbols(jTextField1.getText())){ 
                jLabel5.setForeground(Color.red);
                jLabel5.setText("Недопустимые символы в имени!");
                nameOK = false;
            } else nameOK = true;
        }
        
        if(jTextField2.getText() == null){
            jLabel5.setForeground(Color.red);
            jLabel5.setText("Введите логин!");           
        }
        else {
            if(!checkInvalidSymbols(jTextField2.getText())){
                jLabel5.setForeground(Color.red);
                jLabel5.setText("Недопустимые символы в логине!");
                loginOK = false;    
            } else loginOK = true;
        }
        
        if(jTextField3.getText() == null){
            jLabel5.setForeground(Color.red);
            jLabel5.setText("Введите пароль!");
        }
        else{
            if(!checkInvalidSymbols(jTextField3.getText())){
                jLabel5.setForeground(Color.red);
                jLabel5.setText("Недопустимые символы в пароле!");
                passwordOK = false;
            } else passwordOK = true;
        }
        
        try {
            if(checkLogin(jTextField2.getText(), jTextField3.getText(), accs)){
                exists = true;
                jLabel5.setForeground(Color.red);
                jLabel5.setText("Такой пользователь уже существует!");
            }
            else exists = false;
                
        } catch (IOException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        /************************/
        /* CREATING NEW ACCOUNT */
        /************************/
        if (nameOK && loginOK && passwordOK && !exists){
                    BufferedWriter out = null;
                    //PrintWriter out = null;
                    try {
                        out = new BufferedWriter(new FileWriter(accs, true));
                        out.append(jTextField2.getText() + "_" + jTextField3.getText() + "_" + jTextField1.getText());
                        out.newLine();
                        out.close();
                    } catch (IOException ex) {
                        Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    parent.setDefaultAccount(jTextField2.getText(), jTextField3.getText());
                    parent.setLabelText("Аккаунт создан!");
                    
                    folder = new File("accounts/" + jTextField2.getText());
                    if(!folder.exists())
                        folder.mkdir();
                    
                    this.setVisible(false);
                    this.dispose();
                    parent.setVisible(true);
                }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreateAccount dialog = new CreateAccount(null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
                dialog.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    private boolean checkInvalidSymbols(String text) {
        Pattern p = Pattern.compile("^[а-яА-ЯA-Za-z0-9]{1,15}$");
        Matcher m = p.matcher(text);
        return m.matches();
    }
    
    public boolean checkLogin(String login, String password, File file) throws FileNotFoundException, IOException {
        String buffer;
        String lg;
        String ps;
        String userName;
        boolean check = false;
        
        BufferedReader in = new BufferedReader(new FileReader(file));
        do{
            buffer = in.readLine();
            if(buffer != null){
                StringTokenizer st = new StringTokenizer(buffer, "_");
                lg = st.nextToken();
                ps = st.nextToken();
                userName = st.nextToken();
                if(lg.equals(login))
                    check = true;
                if(ps.equals(password))
                    check = true;
            }
        }while (buffer != null);
        return check;
    }
   
}
